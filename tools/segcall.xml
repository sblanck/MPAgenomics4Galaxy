<tool id="segcall" name="Segmentation and calling" force_history_refresh="True">
  <description>of the normalized data</description>
  <requirement type="package" version="1.1.2">mpagenomics</requirement>
  <command>
    <![CDATA[ 
        Rscript 
        ${__tool_directory__}/segcall.R 
  		--chrom '$chrom' 
  		--input '$input' 
  		--output '$output' 
  		--new_file_path '$__new_file_path__' 
  		--nbcall '$nbcall' 
  	#if $settings.settingsType == "file":
  		--settingsType '$settings.inputs'
  	#end if
  	#if $settings.settingsType == "dataset":
  		--settingsType '$settings.settingsType'
  	#end if
  		--outputgraph '$outputgraph' 
  		--snp '$snp' 
  		--zipfigures '$zipfigures'
  	#if $settingsTumor.settingsTypeTumor == "standard":
  		--settingsTypeTumor 'none'
  	#end if
  	#if $settingsTumor.settingsTypeTumor == "tumor":
  		--settingsTypeTumor '$tumorcsv'
  	#end if
  		--cellularity '$cellularity' 
  		--outputlog '$outputlog' 
  		--log '$log' 
  		--userid '$__user_id__' 
  		--method '$method'
  	]]>
  </command>
  <inputs>
    <!--param name="input" type="data" format="m:cel" label="Cel dataset" refresh="TRUE" help="cel files dataset previously normalized with the Data Normalization tool"/-->
  	<!--param name="inputXml" type="data" format="xml" label="Workspace" help="cel files dataset previously normalized with the Data Normalization tool"/-->
	<param name="input" type="data" format="dsf" label="Dataset summary file" help="Summary text file generated by the Data Normalization tool"/>
	        
    <conditional name="settings">
      <param name="settingsType" type="select" label="Files selection Mode" help="Select the whole cel files dataset or pick-up only few files from the dataset">
        <option value="dataset">Select whole dataset</option>
        <option value="file">Select file(s) individually</option>
      </param>
      <when value="dataset" />
      <when value="file">
        <param name="inputs" type="select" format="cel" multiple="true" label="Cel files">
        <options from_dataset="input">
    		<column name="name" index="0"/>
    		<column name="value" index="0"/>
		</options>
		</param>
      </when>
    </conditional>
    <conditional name="settingsTumor">
      <param name="settingsTypeTumor" type="select" label="Reference">
        <option value="standard">Study without reference</option>
        <option value="tumor">Normal-tumor study</option>
      </param>
      <when value="standard" />
      <when value="tumor">
        <param name="tumorcsv" type="data" format="csv" label="TumorBoost csv file" help="Normal-tumor csv file. See below for more information."/>
      </when>
    </conditional>    
      
      <param name="snp" type="select" label="Select Probes">
        	<option value="FALSE">CN and SNP probes</option>
        	<option value="TRUE">Only SNP probes</option>
    	</param>
   
    <!--param name="chrom" type="text" value="All" label="Chromosomes" help="Chromosomes to segment. Use comma to choose multiple chromosomes: e.g. 1, 3, 8. Use 'All' for a segmentation on all chromosomes" /-->
    
    <param  name="chrom" type="select" size="6" multiple="true" label="Chromosomes" help="leave blank for all chromosomes">
      <option value="All">All</option>
      <option value="1">chr 1</option>
      <option value="2">chr 2</option>
      <option value="3">chr 3</option>
      <option value="4">chr 4</option>
      <option value="5">chr 5</option>
      <option value="6">chr 6</option>
      <option value="7">chr 7</option>
      <option value="8">chr 8</option>
      <option value="9">chr 9</option>
      <option value="10">chr 10</option>
      <option value="11">chr 11</option>
      <option value="12">chr 12</option>
      <option value="13">chr 13</option>
      <option value="14">chr 14</option>
      <option value="15">chr 15</option>
      <option value="16">chr 16</option>
      <option value="17">chr 17</option>
      <option value="18">chr 18</option>
      <option value="19">chr 19</option>
      <option value="20">chr 20</option>
      <option value="21">chr 21</option>
      <option value="22">chr 22</option>
      <option value="23">chr 23</option>
      <option value="24">chr 24</option>
      <option value="25">chr 25</option>
    </param>   	
    <param name="method" type="select" label="Segmentation method" help="">
      <option value="cghseg">cghseg</option>
      <option value="PELT">PELT</option>
    </param>
    	
    <param name="nbcall" type="select" label="Number of calling classes" help="The number of levels to be used for calling. Either 3 (loss, normal, gain), 4 (including amplifications), 5 (including double deletions) ">
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
    </param>
    <param name="cellularity" type="float" size="5" value="1" min="0" max="1" label="Cellularity" help="Ratio of tumor cells in the sample. Real value between 0 and 1"/>
	<param name="outputgraph" type="select" label="Output figures">
        <option value="TRUE">Yes</option>
        <option value="FALSE">No</option>
     </param>    
    <param name="outputlog" type="select" label="Output log">
        <option value="TRUE">Yes</option>
        <option value="FALSE">No</option>
    </param>
  </inputs>
  <outputs>
    <data format="scr" name="output" label="seg. and call of ${input.name}" />
    <data format="zip" name="zipfigures" label="seg. and call figures of ${input.name}">
    	<filter>outputgraph == "TRUE"</filter>	
    </data>
    <data format="log" name="log" label="log of segmentation of ${input.name}">
    	<filter>outputlog == "TRUE"</filter>
    </data>
   </outputs>
   <stdio>
    <exit_code range="1:"   level="fatal"   description="See logs for more details" />
   </stdio>
<help>
.. class:: warningmark

Data normalization must be run with the Data Normalization tool prior to segmentation. Otherwise, the standalone version can be used to perform marker selection from matrices containing data normalized with tools different from the one proposed in this instance.  
	

-----

**What it does**     	
This tool segments the previously normalized profiles and labels segments found in the copy-number profiles. Otherwise, the standalone version can be used to perform segmentation from matrices containing data normalized with tools different from the one proposed in this instance.  
	
Outputs:
  	
*A tabular text file containing 7 columns which describe all the segments (1 line per segment):*
	
	- sampleNames: Names of the original .CEL files.
	- chrom: Chromosome of the segment.
	- chromStart: Starting position (in bp) of the segment. This position is not included in the segment.
	- chromEnd: Ending position (in bp) of the segment. This position is included in the segment.
	- probes: Number of probes in the segment.
	- means: Mean of the segment.
	- calls: Calling of the segment (”double loss”, ”loss”, ”normal”, ”gain” or ”amplification”).
  		
*A .zip file containing all the figures (optionnal)*
	
-----
  		
**Normal-tumor study**
     	
In cases where normal (control) samples match to tumor samples, they are taken as references to extract copy number profile. In this case, a normal-tumor csv file must be provided :

	- The first column contains the names of the files corresponding to normal samples of the dataset.
     	 
	- The second column contains the names of the tumor samples files. 
     	
	- Column names of these two columns are respectively normal and tumor.
     	
	- Columns are separated by a comma.
     	
	- *Extensions of the files (.CEL for example) should be removed*


     	
**Example** 

Let 6 .cel files in the studied dataset (3 patients, each of them being represented by a couple of normal and tumor cel files.) ::
     	
     	patient1_normal.cel
     	patient1_tumor.cel
     	patient2_normal.cel
     	patient2_tumor.cel
     	patient3_normal.cel 
     	patient3_tumor.cel
      	

The csv file should look like this ::
     	
     	normal,tumor
     	patient1_normal,patient1_tumor
     	patient2_normal,patient2_tumor
     	patient3_normal,patient3_tumor

-----     	  		

     	
**Citation**

If you use this tool please cite : 

`Q. Grimonprez, A. Celisse, M. Cheok, M. Figeac, and G. Marot. MPAgenomics : An R package for multi-patients analysis of genomic markers, 2014. Preprint &lt;http://fr.arxiv.org/abs/1401.5035&gt;`_
	
As segmentation is performed with PELT, please also cite `R. Killick, P. Fearnhead, and I. A. Eckley. Optimal detection of changepoints with a linear computational cost. Journal of the American Statistical Association, 107(500):1590–1598, 2012. &lt;http://arxiv.org/abs/1101.1438&gt;`_

As segmentation is performed by cghseg, please cite	`Picard, F., Robin, S., Lavielle, M., Vaisse, C., and Daudin, J.-J. (2005). A statistical approach for array CGH data analysis. BMC Bioinformatics, 6(1):27. &lt;http://www.ncbi.nlm.nih.gov/pubmed/15705208&gt;`_ ,
and also cite Rigaill, G. (2010). `Pruned dynamic programming for optimal multiple change-point detection. &lt;http://arxiv.org/abs/1004.0887&gt;`_	

When using the labels of the segments, please cite CGHCall `M. A. van de Wiel, K. I. Kim, S. J. Vosse, W. N. van Wieringen, S. M. Wilting, and B. Ylstra. CGHcall: calling aberrations for array CGH tumor profiles. Bioinformatics, 23(7):892–894, 2007. &lt;http://bioinformatics.oxfordjournals.org/content/23/7/892.abstract&gt;`_
	
</help>
</tool>
